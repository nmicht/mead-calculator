{"version":3,"sources":["input/index.js","index.js"],"names":["Input","props","react_default","a","createElement","class","htmlFor","id","label","helpText","value","placeholder","type","required","MeadCalculator","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","items","options","text","undefined","i","_this2","inputs","map","item","renderInput","React","Component","ReactDOM","render","src_MeadCalculator","document","getElementById"],"mappings":"kMAGe,SAASA,EAAMC,GAC5B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,MAAM,eACTH,EAAAC,EAAAC,cAAA,SAAOE,QAASL,EAAMM,IACnBN,EAAMO,OAETN,EAAAC,EAAAC,cAAA,QAAMC,MAAM,aACTJ,EAAMQ,UAETP,EAAAC,EAAAC,cAAA,SACEG,GAAIN,EAAMM,GACVG,MAAOT,EAAMS,MACbC,YAAaV,EAAMU,YACnBC,KAAMX,EAAMW,KACZC,SAAUZ,EAAMY,gBCblBC,cACJ,SAAAA,EAAYb,GAAO,IAAAc,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMjB,KACDqB,MAAQ,CACXC,MAAO,CACL,CACEhB,GAAI,gBACJC,MAAO,iCACPE,MAAO,EACPD,SAAU,iBACVG,KAAM,QACNC,UAAU,EACVW,QAAS,CACP,CAAEC,KAAM,UAAWf,MAAO,GAC1B,CAAEe,KAAM,SAAUf,MAAO,KAG7B,CACEH,GAAI,qBACJC,MAAO,sBACPE,MAAO,GACPD,SAAU,iBACVG,KAAM,QACNC,UAAU,EACVW,QAAS,CACP,CAAEC,KAAM,YAAaf,MAAO,IAC5B,CAAEe,KAAM,YAAaf,MAAO,OAGhC,CACEH,GAAI,YACJC,MAAO,aACPE,WAAOgB,EACPf,YAAa,EACbC,KAAM,SACNC,UAAU,GAEZ,CACEN,GAAI,kBACJC,MAAO,mBACPE,WAAOgB,EACPf,YAAa,IACbF,SAAU,iBACVG,KAAM,SACNC,UAAU,GAEZ,CACEN,GAAI,iBACJC,MAAO,kBACPE,WAAOgB,EACPf,YAAa,IACbC,KAAM,SACNC,UAAU,GAEZ,CACEN,GAAI,uBACJC,MAAO,4BACPE,WAAOgB,EACPf,YAAa,EACbF,SAAU,uDACVG,KAAM,SACNC,UAAU,GAEZ,CACEN,GAAI,yBACJC,MAAO,4BACPE,MAAO,EACPC,YAAa,EACbF,SAAU,iDACVG,KAAM,QACNC,UAAU,GAEZ,CACEN,GAAI,+BACJC,MAAO,mCACPE,MAAO,EACPC,YAAa,EACbF,SAAU,gDACVG,KAAM,QACNC,UAAU,KA9ECE,2EAoFPY,GACV,OACEzB,EAAAC,EAAAC,cAACJ,EACK2B,oCAKD,IAAAC,EAAAV,KACDW,EAASX,KAAKI,MAAMC,MAAMO,IAAI,SAACC,GACnC,MAAkB,UAAdA,EAAKnB,MAAkC,aAAdmB,EAAKnB,KACzB,cACgB,WAAdmB,EAAKnB,KACP,SAEAgB,EAAKI,YAAYD,KAI5B,OACE7B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,YACGyB,EACD3B,EAAAC,EAAAC,cAAA,iCA7GmB6B,IAAMC,WAsHnCC,IAASC,OACPlC,EAAAC,EAAAC,cAACiC,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.c99430d9.chunk.js","sourcesContent":["import React from 'react';\nimport './index.css';\n\nexport default function Input(props) {\n  return (\n    <div class=\"input-group\">\n      <label htmlFor={props.id}>\n        {props.label}\n      </label>\n      <span class=\"help-text\">\n        {props.helpText}\n      </span>\n      <input\n        id={props.id}\n        value={props.value}\n        placeholder={props.placeholder}\n        type={props.type}\n        required={props.required}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Input from './input/';\n\nclass MeadCalculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [\n        {\n          id: 'batchSizeUnit',\n          label: 'Unit of Measure for Batch Size',\n          value: 1,\n          helpText: 'Example: 1.115',\n          type: 'radio',\n          required: true,\n          options: [\n            { text: 'gallons', value: 1 },\n            { text: 'liters', value: 2 },\n          ],\n        },\n        {\n          id: 'nutrientPreference',\n          label: 'Nutrient Preference',\n          value: 50,\n          helpText: 'Example: 1.115',\n          type: 'radio',\n          required: true,\n          options: [\n            { text: 'Fermaid-O', value: 50 },\n            { text: 'Fermaid-K', value: 100 },\n          ],\n        },\n        {\n          id: 'batchSize',\n          label: 'Batch Size',\n          value: undefined,\n          placeholder: 1,\n          type: 'number',\n          required: true,\n        },\n        {\n          id: 'startingGravity',\n          label: 'Starting Gravity',\n          value: undefined,\n          placeholder: 1.100,\n          helpText: 'Example: 1.115',\n          type: 'number',\n          required: true,\n        },\n        {\n          id: 'yeastSelection',\n          label: 'Yeast Selection',\n          value: undefined,\n          placeholder: 0.75,\n          type: 'select',\n          required: true,\n        },\n        {\n          id: 'fruitSpecificGravity',\n          label: 'Specific Gravity of Fruit',\n          value: undefined,\n          placeholder: 0,\n          helpText: 'Example: 1.035 (only if fermenting fruit in primary)',\n          type: 'number',\n          required: false,\n        },\n        {\n          id: 'overrideYeastPitchRate',\n          label: 'Override Yeast Pitch Rate',\n          value: 0,\n          placeholder: 0,\n          helpText: 'Enter your preferred grams of yeast per gallon',\n          type: 'range',\n          required: false,\n        },\n        {\n          id: 'metricYeastPitchRateOverride',\n          label: 'Metric Yeast Pitch Rate Override',\n          value: 0,\n          placeholder: 0,\n          helpText: 'Enter your preferred grams of yeast per liter',\n          type: 'range',\n          required: false,\n        }\n      ],\n    };\n  }\n\n  renderInput(i) {\n    return (\n      <Input\n        {...i}\n      />\n    );\n  }\n\n  render() {\n    const inputs = this.state.items.map((item) => {\n      if (item.type === 'radio' || item.type === 'checkbox') {\n        return 'radio/check';\n      } else if (item.type === 'select') {\n        return 'select';\n      } else {\n        return this.renderInput(item);\n      }\n    });\n\n    return (\n      <div>\n        <h3>Mead Calculator</h3>\n        <form>\n          {inputs}\n          <button>\n            Submit\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <MeadCalculator />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}